// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestroFlowAPI.Data;

#nullable disable

namespace RestroFlowAPI.Migrations.RestroFlowDb
{
    [DbContext(typeof(RestroFlowDbContext))]
    [Migration("20240912162838_Intial Seed")]
    partial class IntialSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestroFlowAPI.Models.AlertRecipient", b =>
                {
                    b.Property<Guid>("AlertRecipientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InventoryAlertId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecipientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlertRecipientId");

                    b.HasIndex("InventoryAlertId");

                    b.ToTable("AlertRecipients");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.Budgets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BudgetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BudgetCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BudgetEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BudgetStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Budgets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11985f4b-5289-47a9-ad39-187d6c4cca12"),
                            BudgetAmount = 2000m,
                            BudgetCategory = "Supplies",
                            BudgetEndDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5282),
                            BudgetStartDate = new DateTime(2024, 9, 6, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5279),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8436090f-ed4d-4b2c-b73e-647b616539d4"),
                            BudgetAmount = 1000m,
                            BudgetCategory = "Labour",
                            BudgetEndDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5286),
                            BudgetStartDate = new DateTime(2024, 9, 6, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5285),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("92a8a19e-ef3f-4877-a9e3-9b7a3575fbbe"),
                            BudgetAmount = 400m,
                            BudgetCategory = "Others",
                            BudgetEndDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5288),
                            BudgetStartDate = new DateTime(2024, 9, 6, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5287),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestroFlowAPI.Models.ExpenseReports", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HighestExpenseCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LaborCosts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LowestExpenseCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MiscellaneousExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Utilities")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("ExpenseReports");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.Expenses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpenseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e9df0eb-63d4-4469-a1e5-8fd4326aeec1"),
                            Amount = 1500m,
                            ExpenseDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4866),
                            ExpenseType = "Rent",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("d9298e1a-4726-42d4-8b3c-5e44120d6bb2"),
                            Amount = 250m,
                            ExpenseDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4871),
                            ExpenseType = "Supplies",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("701996b9-7135-4c2b-9323-49f717c08767"),
                            Amount = 250m,
                            ExpenseDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4876),
                            ExpenseType = "Labour",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("05ab09ca-994c-48ff-8cb0-538ea3cfe6a4"),
                            Amount = 80m,
                            ExpenseDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4878),
                            ExpenseType = "Electrictity",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("e6dea5d3-5de5-4f22-8a17-457aacf14e9c"),
                            Amount = 80m,
                            ExpenseDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4881),
                            ExpenseType = "Internet",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("1abcf2cf-4d30-46a9-a569-9f39b61388a9"),
                            Amount = 250m,
                            ExpenseDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4885),
                            ExpenseType = "Water",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("d16c4469-d0d0-41c1-8609-a17191b4b3f6"),
                            Amount = 1500m,
                            ExpenseDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4887),
                            ExpenseType = "Rent",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("410855fc-a649-4717-8b39-5d7be2ed1206"),
                            Amount = 120m,
                            ExpenseDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4889),
                            ExpenseType = "Supplies",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("1a43dc78-0aa5-4f4d-ad1c-4f3f78752dd8"),
                            Amount = 100m,
                            ExpenseDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4893),
                            ExpenseType = "Labour",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("3edcae09-642a-4d29-aa53-e0ee4ded0069"),
                            Amount = 250m,
                            ExpenseDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4896),
                            ExpenseType = "Electrictity",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("cbae00f7-761b-468c-b950-a5841964665a"),
                            Amount = 100m,
                            ExpenseDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4899),
                            ExpenseType = "Internet",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("fa547945-ea39-479f-8719-c0e1937f93e1"),
                            Amount = 250m,
                            ExpenseDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4902),
                            ExpenseType = "Water",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("f318a004-4b0e-4fa0-9a2f-6ac364f7bffe"),
                            Amount = 1500m,
                            ExpenseDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4903),
                            ExpenseType = "Rent",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("dd9d21ff-09d4-42bf-8df0-0c968d891bcf"),
                            Amount = 250m,
                            ExpenseDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4905),
                            ExpenseType = "Supplies",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("f42e063e-5c97-468e-a1c6-e97d48682114"),
                            Amount = 250m,
                            ExpenseDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4909),
                            ExpenseType = "Labour",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("62d4cdd9-9661-4177-ae99-d4213e74e564"),
                            Amount = 100m,
                            ExpenseDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4911),
                            ExpenseType = "Electrictity",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("5a9a1b82-a296-450c-8d48-aa58d13b02bb"),
                            Amount = 100m,
                            ExpenseDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4914),
                            ExpenseType = "Internet",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("4c32f1ed-57db-44ff-b9f0-d7edafd56b5f"),
                            Amount = 120m,
                            ExpenseDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4917),
                            ExpenseType = "Water",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        });
                });

            modelBuilder.Entity("RestroFlowAPI.Models.InventoryAlerts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlertType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RestaurantItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Threshold")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantItemId");

                    b.ToTable("InventoryAlerts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa77aa59-f939-4508-95ab-475e8ee54fd2"),
                            AlertType = "Low Stock",
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5156),
                            RestaurantItemId = new Guid("f58a9385-8a8b-43e7-a7ca-5a953a980cf4"),
                            Threshold = 10f,
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5158)
                        },
                        new
                        {
                            Id = new Guid("cfea7b2c-1e5f-40d9-a0a7-8bb0af703e01"),
                            AlertType = "Low Stock",
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5162),
                            RestaurantItemId = new Guid("122f8ddc-47dd-45e9-8bb5-6b1a3bd1949a"),
                            Threshold = 20f,
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5163)
                        },
                        new
                        {
                            Id = new Guid("dead3800-f081-4490-8b21-3585be3e15df"),
                            AlertType = "Low Stock",
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5165),
                            RestaurantItemId = new Guid("116d32b5-4407-4fe4-9c6e-2aa38c8b6712"),
                            Threshold = 5f,
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5166)
                        },
                        new
                        {
                            Id = new Guid("1177a4e7-a0ed-4441-805f-7f938e50a42b"),
                            AlertType = "Low Stock",
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5171),
                            RestaurantItemId = new Guid("f8472b62-e223-4033-8fb4-59a762cd0f12"),
                            Threshold = 5f,
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5172)
                        },
                        new
                        {
                            Id = new Guid("d7dce05d-be63-4dd2-bbf0-7c330e4b077d"),
                            AlertType = "Low Stock",
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5174),
                            RestaurantItemId = new Guid("973d9cfe-b929-4cf3-ab02-8dfeb1fa9442"),
                            Threshold = 25f,
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5175)
                        },
                        new
                        {
                            Id = new Guid("2d9d56aa-8335-4680-93c9-2eddeeb7c2e6"),
                            AlertType = "Low Stock",
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5179),
                            RestaurantItemId = new Guid("ea6d6784-afbe-4045-809d-90c3a972f12d"),
                            Threshold = 3f,
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5180)
                        },
                        new
                        {
                            Id = new Guid("a591d220-0ed8-4c25-a80b-032436e5e390"),
                            AlertType = "Low Stock",
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5184),
                            RestaurantItemId = new Guid("f87c819a-5b3a-4c09-bb42-b387790b70c0"),
                            Threshold = 25f,
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5185)
                        },
                        new
                        {
                            Id = new Guid("8dbe8adf-11dd-4e47-8797-edad9a130324"),
                            AlertType = "Low Stock",
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5188),
                            RestaurantItemId = new Guid("51a801ff-89b7-4663-a308-b0b577018e14"),
                            Threshold = 10f,
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5189)
                        },
                        new
                        {
                            Id = new Guid("a0ea3b70-0522-4899-a2bc-a37e8b9d67f2"),
                            AlertType = "Low Stock",
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5193),
                            RestaurantItemId = new Guid("7a456054-4b0c-4005-8623-b4a7ecfb4103"),
                            Threshold = 20f,
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5194)
                        },
                        new
                        {
                            Id = new Guid("bdaa92e4-e425-4f37-a214-d91ce3827588"),
                            AlertType = "Low Stock",
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5197),
                            RestaurantItemId = new Guid("a50a5bdf-e0bb-41ae-b23d-87d5076265a7"),
                            Threshold = 3f,
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5198)
                        });
                });

            modelBuilder.Entity("RestroFlowAPI.Models.InventoryReports", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("InventoryReports");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.PaymentMethods", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7927),
                            PaymentName = "Uber Eats",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(8092)
                        },
                        new
                        {
                            Id = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(8326),
                            PaymentName = "DoorDash",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(8332)
                        },
                        new
                        {
                            Id = new Guid("4fd74864-68d0-44c7-ae4d-548aef790aad"),
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(8336),
                            PaymentName = "EFTPOS",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(8338)
                        });
                });

            modelBuilder.Entity("RestroFlowAPI.Models.RestaurantInventories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUdpated")
                        .HasColumnType("datetime2");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("RestaurantItemId");

                    b.HasIndex("SupplierId");

                    b.ToTable("RestaurantInventories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("760885b4-1e50-41c1-8349-732c69d5155c"),
                            LastUdpated = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4975),
                            Quantity = 12f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("f58a9385-8a8b-43e7-a7ca-5a953a980cf4"),
                            SupplierId = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Unit = "Portion"
                        },
                        new
                        {
                            Id = new Guid("fb4ee3f9-1ac4-4701-8efb-8148a764da53"),
                            LastUdpated = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4983),
                            Quantity = 10f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("122f8ddc-47dd-45e9-8bb5-6b1a3bd1949a"),
                            SupplierId = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Unit = "box"
                        },
                        new
                        {
                            Id = new Guid("abcfbd08-0c89-40d4-8b02-1be88de6f315"),
                            LastUdpated = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4986),
                            Quantity = 12f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("116d32b5-4407-4fe4-9c6e-2aa38c8b6712"),
                            SupplierId = new Guid("114288a7-a300-42c6-8578-5f52df5ce147"),
                            Unit = "container"
                        },
                        new
                        {
                            Id = new Guid("8a717094-c949-44d6-bfca-66f94ae237d1"),
                            LastUdpated = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4990),
                            Quantity = 10f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("f8472b62-e223-4033-8fb4-59a762cd0f12"),
                            SupplierId = new Guid("72ddd782-e777-41fe-85b2-e88c189a88f5"),
                            Unit = "container"
                        },
                        new
                        {
                            Id = new Guid("37d9da3b-0dc1-404d-8188-9bf197154a0b"),
                            LastUdpated = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4994),
                            Quantity = 3f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("973d9cfe-b929-4cf3-ab02-8dfeb1fa9442"),
                            SupplierId = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Unit = "portion"
                        },
                        new
                        {
                            Id = new Guid("50deaf6d-666d-408e-91ba-8d007556f5f6"),
                            LastUdpated = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5032),
                            Quantity = 22f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("ea6d6784-afbe-4045-809d-90c3a972f12d"),
                            SupplierId = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("6afcf842-06fa-4fb7-b7bb-f01a9ad79db3"),
                            LastUdpated = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5036),
                            Quantity = 9f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("f87c819a-5b3a-4c09-bb42-b387790b70c0"),
                            SupplierId = new Guid("114288a7-a300-42c6-8578-5f52df5ce147"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("26e2561a-793a-4e64-8fa0-98956a35a51e"),
                            LastUdpated = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5039),
                            Quantity = 5f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("51a801ff-89b7-4663-a308-b0b577018e14"),
                            SupplierId = new Guid("72ddd782-e777-41fe-85b2-e88c189a88f5"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("b70b2112-291c-41c9-b5b6-51fcaeb783fb"),
                            LastUdpated = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5043),
                            Quantity = 6f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("7a456054-4b0c-4005-8623-b4a7ecfb4103"),
                            SupplierId = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("42533065-8ed3-4d6c-bd4e-cf1c1204b409"),
                            LastUdpated = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5047),
                            Quantity = 11f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("a50a5bdf-e0bb-41ae-b23d-87d5076265a7"),
                            SupplierId = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("5991cbc0-93d2-48ae-89e6-fe97fea21afa"),
                            LastUdpated = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5050),
                            Quantity = 5f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("f58a9385-8a8b-43e7-a7ca-5a953a980cf4"),
                            SupplierId = new Guid("114288a7-a300-42c6-8578-5f52df5ce147"),
                            Unit = "Portion"
                        },
                        new
                        {
                            Id = new Guid("6a3423cd-e0d3-4f6a-92e6-25cbe9a71ce7"),
                            LastUdpated = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5053),
                            Quantity = 4f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("122f8ddc-47dd-45e9-8bb5-6b1a3bd1949a"),
                            SupplierId = new Guid("72ddd782-e777-41fe-85b2-e88c189a88f5"),
                            Unit = "box"
                        },
                        new
                        {
                            Id = new Guid("dfacaed3-0809-43f3-a2b8-3827c151c5ac"),
                            LastUdpated = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5057),
                            Quantity = 22f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("116d32b5-4407-4fe4-9c6e-2aa38c8b6712"),
                            SupplierId = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Unit = "container"
                        },
                        new
                        {
                            Id = new Guid("f465256d-adaa-44bd-a37e-e3ccf20b149e"),
                            LastUdpated = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5060),
                            Quantity = 1f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("f8472b62-e223-4033-8fb4-59a762cd0f12"),
                            SupplierId = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Unit = "container"
                        },
                        new
                        {
                            Id = new Guid("b35e5c1b-1360-4049-90f9-4f5ba643178d"),
                            LastUdpated = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5064),
                            Quantity = 3f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("973d9cfe-b929-4cf3-ab02-8dfeb1fa9442"),
                            SupplierId = new Guid("114288a7-a300-42c6-8578-5f52df5ce147"),
                            Unit = "portion"
                        },
                        new
                        {
                            Id = new Guid("2db956f4-0ec3-4fbd-ba46-f587aa82463b"),
                            LastUdpated = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5066),
                            Quantity = 22f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("ea6d6784-afbe-4045-809d-90c3a972f12d"),
                            SupplierId = new Guid("72ddd782-e777-41fe-85b2-e88c189a88f5"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("f09f63c5-1b63-45bd-97ee-a49e89859dc5"),
                            LastUdpated = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5069),
                            Quantity = 12f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("f87c819a-5b3a-4c09-bb42-b387790b70c0"),
                            SupplierId = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("620a1cc8-ac4f-43c4-80bb-d5c68481f49b"),
                            LastUdpated = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5074),
                            Quantity = 10f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("51a801ff-89b7-4663-a308-b0b577018e14"),
                            SupplierId = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("5c948061-db45-4a13-95f4-d2f936f1e622"),
                            LastUdpated = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5077),
                            Quantity = 10f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("7a456054-4b0c-4005-8623-b4a7ecfb4103"),
                            SupplierId = new Guid("114288a7-a300-42c6-8578-5f52df5ce147"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("b18f94b4-9327-4ee1-8518-e9a833e693b7"),
                            LastUdpated = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5079),
                            Quantity = 5f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("a50a5bdf-e0bb-41ae-b23d-87d5076265a7"),
                            SupplierId = new Guid("72ddd782-e777-41fe-85b2-e88c189a88f5"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("77e9f92a-5cbc-4074-b636-9aafc292f31b"),
                            LastUdpated = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5083),
                            Quantity = 12f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("f58a9385-8a8b-43e7-a7ca-5a953a980cf4"),
                            SupplierId = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Unit = "Portion"
                        },
                        new
                        {
                            Id = new Guid("a744c61c-782b-4fab-9860-d97b06dcf088"),
                            LastUdpated = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5086),
                            Quantity = 22f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("122f8ddc-47dd-45e9-8bb5-6b1a3bd1949a"),
                            SupplierId = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Unit = "box"
                        },
                        new
                        {
                            Id = new Guid("b33340ed-4a90-4f03-a389-cf3ef1afec73"),
                            LastUdpated = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5090),
                            Quantity = 12f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("116d32b5-4407-4fe4-9c6e-2aa38c8b6712"),
                            SupplierId = new Guid("114288a7-a300-42c6-8578-5f52df5ce147"),
                            Unit = "container"
                        },
                        new
                        {
                            Id = new Guid("cb84a3d5-c387-44de-a7f0-50f5f5d413c0"),
                            LastUdpated = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5093),
                            Quantity = 6f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("f8472b62-e223-4033-8fb4-59a762cd0f12"),
                            SupplierId = new Guid("72ddd782-e777-41fe-85b2-e88c189a88f5"),
                            Unit = "container"
                        },
                        new
                        {
                            Id = new Guid("d867145a-1cde-4348-93ea-09e500a09ae2"),
                            LastUdpated = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5095),
                            Quantity = 3f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("973d9cfe-b929-4cf3-ab02-8dfeb1fa9442"),
                            SupplierId = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Unit = "portion"
                        },
                        new
                        {
                            Id = new Guid("fb612e81-299d-4fdd-854e-72541d7bfed6"),
                            LastUdpated = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5100),
                            Quantity = 3f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("ea6d6784-afbe-4045-809d-90c3a972f12d"),
                            SupplierId = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("83bdb3e3-60f4-472b-afdd-3d78725af3d4"),
                            LastUdpated = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5102),
                            Quantity = 12f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("f87c819a-5b3a-4c09-bb42-b387790b70c0"),
                            SupplierId = new Guid("114288a7-a300-42c6-8578-5f52df5ce147"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("15659011-2b6b-4f4a-9fcf-54126e1065cc"),
                            LastUdpated = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5105),
                            Quantity = 22f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("51a801ff-89b7-4663-a308-b0b577018e14"),
                            SupplierId = new Guid("72ddd782-e777-41fe-85b2-e88c189a88f5"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("5534ea5a-f4ff-4169-b31b-09f8eee610cc"),
                            LastUdpated = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5109),
                            Quantity = 11f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("7a456054-4b0c-4005-8623-b4a7ecfb4103"),
                            SupplierId = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Unit = "bag"
                        },
                        new
                        {
                            Id = new Guid("e369f426-1517-4070-b147-9280883b1828"),
                            LastUdpated = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5112),
                            Quantity = 11f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantItemId = new Guid("a50a5bdf-e0bb-41ae-b23d-87d5076265a7"),
                            SupplierId = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Unit = "bag"
                        });
                });

            modelBuilder.Entity("RestroFlowAPI.Models.RestaurantItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("SupplierId");

                    b.ToTable("RestaurantItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f58a9385-8a8b-43e7-a7ca-5a953a980cf4"),
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(6584),
                            Name = "Whole chicken",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            SupplierId = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Unit = "Portion",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(6762)
                        },
                        new
                        {
                            Id = new Guid("122f8ddc-47dd-45e9-8bb5-6b1a3bd1949a"),
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7280),
                            Name = "Boneless chicken",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            SupplierId = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Unit = "box",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7287)
                        },
                        new
                        {
                            Id = new Guid("116d32b5-4407-4fe4-9c6e-2aa38c8b6712"),
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7293),
                            Name = "Chicken wings",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            SupplierId = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Unit = "container",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7294)
                        },
                        new
                        {
                            Id = new Guid("f8472b62-e223-4033-8fb4-59a762cd0f12"),
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7299),
                            Name = "Chicken Steak",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            SupplierId = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Unit = "container",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7301)
                        },
                        new
                        {
                            Id = new Guid("973d9cfe-b929-4cf3-ab02-8dfeb1fa9442"),
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7307),
                            Name = "Marinated beef",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            SupplierId = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Unit = "portion",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7309)
                        },
                        new
                        {
                            Id = new Guid("ea6d6784-afbe-4045-809d-90c3a972f12d"),
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7314),
                            Name = "Chicken powder",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            SupplierId = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Unit = "bag",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7316)
                        },
                        new
                        {
                            Id = new Guid("f87c819a-5b3a-4c09-bb42-b387790b70c0"),
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7320),
                            Name = "Soy garlic",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            SupplierId = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Unit = "bag",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7322)
                        },
                        new
                        {
                            Id = new Guid("51a801ff-89b7-4663-a308-b0b577018e14"),
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7326),
                            Name = "Spicy sauce",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            SupplierId = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Unit = "bag",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7328)
                        },
                        new
                        {
                            Id = new Guid("7a456054-4b0c-4005-8623-b4a7ecfb4103"),
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7334),
                            Name = "Sweet Chiilies",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            SupplierId = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Unit = "bag",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7335)
                        },
                        new
                        {
                            Id = new Guid("a50a5bdf-e0bb-41ae-b23d-87d5076265a7"),
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7340),
                            Name = "Wedges",
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            SupplierId = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Unit = "bag",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(7341)
                        });
                });

            modelBuilder.Entity("RestroFlowAPI.Models.RestaurantMenus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantMenus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ca19c31-2e04-42e7-8cad-6e61bd177eaf"),
                            Category = "Fried Chicken (Boneless)",
                            Description = "Gami's most popular dish is back! Once again served on our signature wooden plate",
                            DishName = "The Classic Boneless",
                            Price = 42m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("4d165d8f-fbcf-4144-a318-374e7f08cb57"),
                            Category = "Fried Chicken (Bone-in)",
                            Description = "The traditional way to enjoy Korean chicken, a hands-on approach.",
                            DishName = "Whole-Chicken",
                            Price = 40m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("1d74b052-3b59-465f-add2-d91f96b8961a"),
                            Category = "Fried Chicken (boneless)",
                            Description = "The cornerstone of Gami's authentic Korean taste.",
                            DishName = "Regular Chicken",
                            Price = 21m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("45859bd4-b0bd-4491-8b1b-7c33a940df8a"),
                            Category = "Fried Chicken (boneless)",
                            Description = "A mix of chicken wingettes and drumettes.",
                            DishName = "10 Wings",
                            Price = 17m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("19924c8f-32e0-4c3d-b425-995ed0ddca5a"),
                            Category = "Korean Classics",
                            Description = "Tender slices of marinated beef and ve ies stir-fried with sweet potato noodles in a sweet soy sauce, served with rice and a fresh green salad with Tangerine dressing.",
                            DishName = "Beef Bulgogi",
                            Price = 18.5m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("d5d66b38-5140-485b-8575-f83d5fae6a5f"),
                            Category = "Korean Classics",
                            Description = "A healthy and delicious Korean rice dish showcasing flavourful vegetables, your preferred protein and a choice of sauce. Topped with a fried egg.",
                            DishName = "Korean Classics",
                            Price = 16m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("dd636f75-f510-47eb-bfc8-cf2613defdba"),
                            Category = "Korean Classics",
                            Description = "TA beloved Korean favourite, featuring stir-fried rice cakes, fish cakes, assorted vegetables, and noodles, all coated in a rich and spicy Korean chilli sauce.",
                            DishName = "Tteok Bokki",
                            Price = 14.5m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("6dac4780-fbf3-41f4-8971-b7abdef83a86"),
                            Category = "Sides",
                            Description = "Locally grown cut potato strips coated in Gami signature batter.",
                            DishName = "Gami Chips",
                            Price = 6.9m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("fc693bcd-807b-4506-a8fd-dc3e31905a81"),
                            Category = "Sides",
                            Description = "5 deep-fried premium handmade dumplings, filled with chunky prawn meat wrapped in thin crispy skin.",
                            DishName = "Prawn Mandu",
                            Price = 14.5m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("29585767-ced3-46a6-8f1f-06455c4b1172"),
                            Category = "Korean Classics",
                            Description = "",
                            DishName = "Kimchi Fried Rice",
                            Price = 13.5m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("07a67762-a063-46db-94d1-080237b187a5"),
                            Category = "Korean Classics",
                            Description = "",
                            DishName = "Kimchi Pancake",
                            Price = 16m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("bab92f8b-1fd6-4fbb-9c66-777c49280d54"),
                            Category = "Korean Classics",
                            Description = "",
                            DishName = "Japchae",
                            Price = 15.5m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("75734df5-e59e-4d9e-a224-ed8e4ae67fdd"),
                            Category = "Sides",
                            Description = "",
                            DishName = "Chicken Skewers ",
                            Price = 10m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("d02988c8-bd91-400d-8593-403c285c6dfb"),
                            Category = "Sides",
                            Description = "",
                            DishName = "Chicken Skewer plate",
                            Price = 28m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("f6c1d21b-b9dd-452f-8e14-364f530bf7b8"),
                            Category = "Sides",
                            Description = "",
                            DishName = "Potato Heaven",
                            Price = 16.5m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        },
                        new
                        {
                            Id = new Guid("6e4aaccc-3c0d-4d91-a8e0-10e1a70a24f2"),
                            Category = "Sides",
                            Description = "",
                            DishName = "Chicken Burger",
                            Price = 15m,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1")
                        });
                });

            modelBuilder.Entity("RestroFlowAPI.Models.Restaurants", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            Address = "840 Glenferrie Rd, Hawthorn VIC 3122",
                            City = "Mebourne",
                            CreatedAt = new DateTime(2024, 1, 1, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gami Chicken and Beer",
                            Suburb = "Hawthorn",
                            UpdatedAt = new DateTime(2024, 1, 1, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestroFlowAPI.Models.Reviews", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReviewContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5fa3cb70-e50d-4c6f-9c4a-8e9a565c4e79"),
                            Rating = 2f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            ReviewDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5318),
                            ReviewSource = "Facebook"
                        },
                        new
                        {
                            Id = new Guid("43bc9a43-c2b9-47c5-b07f-c28908048458"),
                            Rating = 4f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            ReviewDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5323),
                            ReviewSource = "Facebook"
                        },
                        new
                        {
                            Id = new Guid("35e9d6a7-20ac-44c0-83db-dd66f4be978c"),
                            Rating = 3f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            ReviewDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5327),
                            ReviewSource = "Facebook"
                        },
                        new
                        {
                            Id = new Guid("48389866-88f4-478f-8e2c-e016b3113999"),
                            Rating = 2f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            ReviewDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5331),
                            ReviewSource = "Facebook"
                        },
                        new
                        {
                            Id = new Guid("82d8c098-9bba-4562-86cb-bad16e34077d"),
                            Rating = 3f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            ReviewDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5334),
                            ReviewSource = "Facebook"
                        },
                        new
                        {
                            Id = new Guid("201f75df-1bc8-4601-9a36-24e03137c0d3"),
                            Rating = 2f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            ReviewDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5339),
                            ReviewSource = "Others"
                        },
                        new
                        {
                            Id = new Guid("1a30abc3-26a4-4d90-ab98-5c5275570cff"),
                            Rating = 2f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            ReviewDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5342),
                            ReviewSource = "Google"
                        },
                        new
                        {
                            Id = new Guid("4991744f-7524-411a-9260-44aa8aa4ce10"),
                            Rating = 4f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            ReviewDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5346),
                            ReviewSource = "Google"
                        },
                        new
                        {
                            Id = new Guid("00ff3057-a844-4251-971c-7f27e6394060"),
                            Rating = 2f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            ReviewDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5350),
                            ReviewSource = "Others"
                        },
                        new
                        {
                            Id = new Guid("03e08c7f-7b25-4d26-84f4-b7f51e3d0577"),
                            Rating = 4f,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            ReviewDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(5354),
                            ReviewSource = "Facebook"
                        });
                });

            modelBuilder.Entity("RestroFlowAPI.Models.SaleReports", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BestSellingItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BestSellingItemQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NumberOfTransactions")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesByCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesByPaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalSalesRevenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WorstSellingItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorstSellingItemQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("SaleReports");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.Sales", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PaymentMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RestaurantMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("RestaurantMenuId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = new Guid("891f595f-f10a-4dab-a088-306a677d8feb"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 11,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("9ca19c31-2e04-42e7-8cad-6e61bd177eaf"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4476),
                            TotalAmount = 462m
                        },
                        new
                        {
                            Id = new Guid("237d2b0e-c38c-468f-ad9a-9fb1180ad4cd"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 16,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("4d165d8f-fbcf-4144-a318-374e7f08cb57"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4535),
                            TotalAmount = 640m
                        },
                        new
                        {
                            Id = new Guid("53c16e82-e795-4468-aa79-43dc97a7604a"),
                            PaymentMethodId = new Guid("4fd74864-68d0-44c7-ae4d-548aef790aad"),
                            Quantity = 20,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("1d74b052-3b59-465f-add2-d91f96b8961a"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4541),
                            TotalAmount = 420m
                        },
                        new
                        {
                            Id = new Guid("648e1766-01e6-4731-a506-d52e5eed63e0"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 1,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("45859bd4-b0bd-4491-8b1b-7c33a940df8a"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4545),
                            TotalAmount = 17m
                        },
                        new
                        {
                            Id = new Guid("cc08936a-7d04-4bfa-a88f-08056e5dc2c3"),
                            PaymentMethodId = new Guid("4fd74864-68d0-44c7-ae4d-548aef790aad"),
                            Quantity = 2,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("19924c8f-32e0-4c3d-b425-995ed0ddca5a"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4550),
                            TotalAmount = 37.0m
                        },
                        new
                        {
                            Id = new Guid("0dc40bd1-6f9b-43bf-9043-7732a8803a19"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 12,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("d5d66b38-5140-485b-8575-f83d5fae6a5f"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4557),
                            TotalAmount = 192m
                        },
                        new
                        {
                            Id = new Guid("16376ee2-3feb-410e-add3-f0d0154db5be"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 16,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("dd636f75-f510-47eb-bfc8-cf2613defdba"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4560),
                            TotalAmount = 232.0m
                        },
                        new
                        {
                            Id = new Guid("b4399d3d-59d3-4dae-bc1a-854c3a8066a3"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 12,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("6dac4780-fbf3-41f4-8971-b7abdef83a86"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4565),
                            TotalAmount = 82.8m
                        },
                        new
                        {
                            Id = new Guid("cb97587d-07ef-4bf2-8f58-e7906ca76211"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 16,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("fc693bcd-807b-4506-a8fd-dc3e31905a81"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4570),
                            TotalAmount = 232.0m
                        },
                        new
                        {
                            Id = new Guid("123bdd23-7a76-4032-9563-76ad42fd8419"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 12,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("29585767-ced3-46a6-8f1f-06455c4b1172"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4574),
                            TotalAmount = 162.0m
                        },
                        new
                        {
                            Id = new Guid("4ed81407-a662-4fbd-a189-35d8d36a850f"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 18,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("07a67762-a063-46db-94d1-080237b187a5"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4579),
                            TotalAmount = 288m
                        },
                        new
                        {
                            Id = new Guid("90a4cfb7-eb27-49a5-a8e2-50a2f32df498"),
                            PaymentMethodId = new Guid("4fd74864-68d0-44c7-ae4d-548aef790aad"),
                            Quantity = 16,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("bab92f8b-1fd6-4fbb-9c66-777c49280d54"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4582),
                            TotalAmount = 248.0m
                        },
                        new
                        {
                            Id = new Guid("e0d4890c-7708-4d18-9ac8-a68d2e3ced19"),
                            PaymentMethodId = new Guid("4fd74864-68d0-44c7-ae4d-548aef790aad"),
                            Quantity = 11,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("75734df5-e59e-4d9e-a224-ed8e4ae67fdd"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4587),
                            TotalAmount = 110m
                        },
                        new
                        {
                            Id = new Guid("b18026c7-fd96-4506-a168-83cbbe78cf75"),
                            PaymentMethodId = new Guid("4fd74864-68d0-44c7-ae4d-548aef790aad"),
                            Quantity = 16,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("d02988c8-bd91-400d-8593-403c285c6dfb"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4591),
                            TotalAmount = 448m
                        },
                        new
                        {
                            Id = new Guid("d56f791d-884f-4f94-adae-a967f357a647"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 10,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("f6c1d21b-b9dd-452f-8e14-364f530bf7b8"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4595),
                            TotalAmount = 165.0m
                        },
                        new
                        {
                            Id = new Guid("bb48fd7a-b769-4b2e-b5c6-8e488b2967fd"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 2,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("6e4aaccc-3c0d-4d91-a8e0-10e1a70a24f2"),
                            SaleDate = new DateTime(2024, 9, 13, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4599),
                            TotalAmount = 30m
                        },
                        new
                        {
                            Id = new Guid("b26eec95-4905-4e7c-9f64-ee4ea3347239"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 20,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("9ca19c31-2e04-42e7-8cad-6e61bd177eaf"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4604),
                            TotalAmount = 840m
                        },
                        new
                        {
                            Id = new Guid("dfe54a7a-b9da-462c-ad55-904dda407612"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 16,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("4d165d8f-fbcf-4144-a318-374e7f08cb57"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4608),
                            TotalAmount = 640m
                        },
                        new
                        {
                            Id = new Guid("d52ec97c-afba-4759-9466-fa03e8c36c4b"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 15,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("1d74b052-3b59-465f-add2-d91f96b8961a"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4613),
                            TotalAmount = 315m
                        },
                        new
                        {
                            Id = new Guid("c32b6dd8-0a1e-49a3-adde-878ae726bf6d"),
                            PaymentMethodId = new Guid("4fd74864-68d0-44c7-ae4d-548aef790aad"),
                            Quantity = 16,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("45859bd4-b0bd-4491-8b1b-7c33a940df8a"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4632),
                            TotalAmount = 272m
                        },
                        new
                        {
                            Id = new Guid("bfe005d8-6a63-4316-bee7-c36259e55067"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 1,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("19924c8f-32e0-4c3d-b425-995ed0ddca5a"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4637),
                            TotalAmount = 18.5m
                        },
                        new
                        {
                            Id = new Guid("ded7d351-4cc6-40ae-a4de-3fea48fd6d46"),
                            PaymentMethodId = new Guid("4fd74864-68d0-44c7-ae4d-548aef790aad"),
                            Quantity = 10,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("d5d66b38-5140-485b-8575-f83d5fae6a5f"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4641),
                            TotalAmount = 160m
                        },
                        new
                        {
                            Id = new Guid("2e78f6bd-d4b8-4c05-9472-925ee4cb7512"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 20,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("dd636f75-f510-47eb-bfc8-cf2613defdba"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4645),
                            TotalAmount = 290.0m
                        },
                        new
                        {
                            Id = new Guid("7d31c685-46f4-4598-926f-f261ce29fb3f"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 15,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("6dac4780-fbf3-41f4-8971-b7abdef83a86"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4650),
                            TotalAmount = 103.5m
                        },
                        new
                        {
                            Id = new Guid("7620851e-7b90-46b9-9f2c-332995aea462"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 16,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("fc693bcd-807b-4506-a8fd-dc3e31905a81"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4655),
                            TotalAmount = 232.0m
                        },
                        new
                        {
                            Id = new Guid("d4253e69-5beb-4d48-8379-d8112470cb07"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 20,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("29585767-ced3-46a6-8f1f-06455c4b1172"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4658),
                            TotalAmount = 270.0m
                        },
                        new
                        {
                            Id = new Guid("3917913b-cfa2-45dc-b54b-4d90d482f6cd"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 15,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("07a67762-a063-46db-94d1-080237b187a5"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4663),
                            TotalAmount = 240m
                        },
                        new
                        {
                            Id = new Guid("7a473eb0-0686-46a5-9918-fb6cd8f3979e"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 2,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("bab92f8b-1fd6-4fbb-9c66-777c49280d54"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4667),
                            TotalAmount = 31.0m
                        },
                        new
                        {
                            Id = new Guid("f082992a-40ca-404b-b39a-9137cff26996"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 11,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("75734df5-e59e-4d9e-a224-ed8e4ae67fdd"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4672),
                            TotalAmount = 110m
                        },
                        new
                        {
                            Id = new Guid("d710a1b2-7d67-4615-8211-c2d8a8e8cace"),
                            PaymentMethodId = new Guid("4fd74864-68d0-44c7-ae4d-548aef790aad"),
                            Quantity = 15,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("d02988c8-bd91-400d-8593-403c285c6dfb"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4676),
                            TotalAmount = 420m
                        },
                        new
                        {
                            Id = new Guid("8f6ab32a-a5fa-4169-9dce-648a17639183"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 2,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("f6c1d21b-b9dd-452f-8e14-364f530bf7b8"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4679),
                            TotalAmount = 33.0m
                        },
                        new
                        {
                            Id = new Guid("164ec604-3bc6-4673-9581-68095508d67d"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 20,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("6e4aaccc-3c0d-4d91-a8e0-10e1a70a24f2"),
                            SaleDate = new DateTime(2024, 9, 12, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4684),
                            TotalAmount = 300m
                        },
                        new
                        {
                            Id = new Guid("c32bab4e-7218-4088-ad5d-74137414e75b"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 11,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("9ca19c31-2e04-42e7-8cad-6e61bd177eaf"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4689),
                            TotalAmount = 462m
                        },
                        new
                        {
                            Id = new Guid("36d727dd-69f0-4122-94d1-050ead021a19"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 12,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("4d165d8f-fbcf-4144-a318-374e7f08cb57"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4693),
                            TotalAmount = 480m
                        },
                        new
                        {
                            Id = new Guid("c98dfe6b-0ef1-4a27-8775-738a202390a3"),
                            PaymentMethodId = new Guid("4fd74864-68d0-44c7-ae4d-548aef790aad"),
                            Quantity = 2,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("1d74b052-3b59-465f-add2-d91f96b8961a"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4698),
                            TotalAmount = 42m
                        },
                        new
                        {
                            Id = new Guid("91d72a4b-56a0-4680-921f-3cefa7b3c43a"),
                            PaymentMethodId = new Guid("4fd74864-68d0-44c7-ae4d-548aef790aad"),
                            Quantity = 16,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("45859bd4-b0bd-4491-8b1b-7c33a940df8a"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4701),
                            TotalAmount = 272m
                        },
                        new
                        {
                            Id = new Guid("90418ae4-b8df-43ee-9266-0f7a010ed6a8"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 15,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("19924c8f-32e0-4c3d-b425-995ed0ddca5a"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4706),
                            TotalAmount = 277.5m
                        },
                        new
                        {
                            Id = new Guid("eedf2f42-59b6-4674-be42-133a67f901d7"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 16,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("d5d66b38-5140-485b-8575-f83d5fae6a5f"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4711),
                            TotalAmount = 256m
                        },
                        new
                        {
                            Id = new Guid("6d111ea5-8c18-458f-9d8c-ca13b685c15b"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 10,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("dd636f75-f510-47eb-bfc8-cf2613defdba"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4714),
                            TotalAmount = 145.0m
                        },
                        new
                        {
                            Id = new Guid("07568314-3060-41cc-a880-850457f58640"),
                            PaymentMethodId = new Guid("4fd74864-68d0-44c7-ae4d-548aef790aad"),
                            Quantity = 20,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("6dac4780-fbf3-41f4-8971-b7abdef83a86"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4719),
                            TotalAmount = 138.0m
                        },
                        new
                        {
                            Id = new Guid("be59ee49-4d86-4435-abb1-ebda442e34d4"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 15,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("fc693bcd-807b-4506-a8fd-dc3e31905a81"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4723),
                            TotalAmount = 217.5m
                        },
                        new
                        {
                            Id = new Guid("03771e5c-fe00-42ce-a0b3-aa3826293b8f"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 1,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("29585767-ced3-46a6-8f1f-06455c4b1172"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4727),
                            TotalAmount = 13.5m
                        },
                        new
                        {
                            Id = new Guid("52f8b59d-8552-4756-8169-abfe20cf65da"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 18,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("07a67762-a063-46db-94d1-080237b187a5"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4731),
                            TotalAmount = 288m
                        },
                        new
                        {
                            Id = new Guid("95cb092f-80eb-4162-b6d0-1a54d4e1be30"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 16,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("bab92f8b-1fd6-4fbb-9c66-777c49280d54"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4735),
                            TotalAmount = 248.0m
                        },
                        new
                        {
                            Id = new Guid("f10fcdfe-cadf-4bd1-8baa-a0b03c2a2a1f"),
                            PaymentMethodId = new Guid("4fd74864-68d0-44c7-ae4d-548aef790aad"),
                            Quantity = 2,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("75734df5-e59e-4d9e-a224-ed8e4ae67fdd"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4786),
                            TotalAmount = 20m
                        },
                        new
                        {
                            Id = new Guid("d81e89bd-9a5c-41c5-8435-3f07df52f7af"),
                            PaymentMethodId = new Guid("6eff914c-554b-47f2-b77f-a1b652f63337"),
                            Quantity = 1,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("d02988c8-bd91-400d-8593-403c285c6dfb"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4791),
                            TotalAmount = 28m
                        },
                        new
                        {
                            Id = new Guid("1278b420-b938-4639-8874-c4a61d4dd1ed"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 2,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("f6c1d21b-b9dd-452f-8e14-364f530bf7b8"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4795),
                            TotalAmount = 33.0m
                        },
                        new
                        {
                            Id = new Guid("0ec95745-c762-4785-b3da-cd7ab8d68fe4"),
                            PaymentMethodId = new Guid("a6995138-8ce2-4adb-9804-84b905125a7f"),
                            Quantity = 10,
                            RestaurantId = new Guid("cc0db03e-f425-459f-88ca-26496d389dc1"),
                            RestaurantMenuId = new Guid("6e4aaccc-3c0d-4d91-a8e0-10e1a70a24f2"),
                            SaleDate = new DateTime(2024, 9, 11, 2, 28, 37, 882, DateTimeKind.Local).AddTicks(4800),
                            TotalAmount = 150m
                        });
                });

            modelBuilder.Entity("RestroFlowAPI.Models.StockOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RestaurantItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("RestaurantItemId");

                    b.HasIndex("SupplierId");

                    b.ToTable("StockOrders");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.SupplierInventories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SupplierItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.HasIndex("SupplierItemId");

                    b.ToTable("SupplierInventories");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.SupplierItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierItems");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.Suppliers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a04327d-3b36-40ea-8759-f3d479e36529"),
                            Address = "12 Oceanview Drive",
                            City = "Bondi Beach",
                            ContactEmail = "jane@befood.com",
                            ContactName = "Jane Smith",
                            ContactPhone = "03 9654 3210",
                            CreatedAt = new DateTime(2024, 1, 1, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "B&E Food",
                            State = "VIC",
                            UpdatedAt = new DateTime(2024, 1, 1, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cf762d80-3731-4d9d-af92-b77f99676005"),
                            Address = "45 Maple Street",
                            City = "South Yarra",
                            ContactEmail = "SarahJohnso@CFS.com",
                            ContactName = "Sarah Johnso",
                            ContactPhone = "07 3345 6721",
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(2552),
                            Name = "Complete Food Services",
                            State = "VIC",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(3261)
                        },
                        new
                        {
                            Id = new Guid("114288a7-a300-42c6-8578-5f52df5ce147"),
                            Address = "88 Kangaroo Court",
                            City = " Brisbane",
                            ContactEmail = " JamesCooper@FFI.com",
                            ContactName = "James Cooper",
                            ContactPhone = "08 9314 7890",
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(3272),
                            Name = "Fresh Food Industries",
                            State = "VIC",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(3274)
                        },
                        new
                        {
                            Id = new Guid("72ddd782-e777-41fe-85b2-e88c189a88f5"),
                            Address = "23 Sunset Avenue",
                            City = "Fremantle",
                            ContactEmail = "OliviaMiller@GFIFood.com",
                            ContactName = "Olivia Miller",
                            ContactPhone = "03 6234 9087",
                            CreatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(3279),
                            Name = "GFI Foods",
                            State = "VIC",
                            UpdatedAt = new DateTime(2024, 9, 13, 2, 28, 37, 606, DateTimeKind.Local).AddTicks(3280)
                        });
                });

            modelBuilder.Entity("RestroFlowAPI.Models.AlertRecipient", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.InventoryAlerts", "InventoryAlert")
                        .WithMany()
                        .HasForeignKey("InventoryAlertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryAlert");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.Budgets", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.Restaurants", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.ExpenseReports", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.Restaurants", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.Expenses", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.Restaurants", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.InventoryAlerts", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.RestaurantItems", "RestaurantItem")
                        .WithMany()
                        .HasForeignKey("RestaurantItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RestaurantItem");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.InventoryReports", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.Restaurants", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.RestaurantInventories", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.Restaurants", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RestroFlowAPI.Models.RestaurantItems", "RestaurantItem")
                        .WithMany()
                        .HasForeignKey("RestaurantItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RestroFlowAPI.Models.Suppliers", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Restaurant");

                    b.Navigation("RestaurantItem");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.RestaurantItems", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.Restaurants", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RestroFlowAPI.Models.Suppliers", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Restaurant");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.RestaurantMenus", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.Restaurants", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.Reviews", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.Restaurants", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.SaleReports", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.Restaurants", "restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("restaurant");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.Sales", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.PaymentMethods", "PaymentMethods")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("RestroFlowAPI.Models.Restaurants", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("RestroFlowAPI.Models.RestaurantMenus", "RestaurantMenus")
                        .WithMany()
                        .HasForeignKey("RestaurantMenuId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("PaymentMethods");

                    b.Navigation("Restaurant");

                    b.Navigation("RestaurantMenus");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.StockOrders", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.Restaurants", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("RestroFlowAPI.Models.RestaurantItems", "RestaurantItem")
                        .WithMany()
                        .HasForeignKey("RestaurantItemId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("RestroFlowAPI.Models.Suppliers", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Restaurant");

                    b.Navigation("RestaurantItem");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.SupplierInventories", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.Suppliers", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("RestroFlowAPI.Models.SupplierItems", "SupplierItems")
                        .WithMany()
                        .HasForeignKey("SupplierItemId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Supplier");

                    b.Navigation("SupplierItems");
                });

            modelBuilder.Entity("RestroFlowAPI.Models.SupplierItems", b =>
                {
                    b.HasOne("RestroFlowAPI.Models.Suppliers", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });
#pragma warning restore 612, 618
        }
    }
}
